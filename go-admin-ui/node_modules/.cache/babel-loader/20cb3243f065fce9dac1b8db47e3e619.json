{"remainingRequest":"/usr/node/app/node_modules/babel-loader/lib/index.js!/usr/node/app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/usr/node/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/node/app/src/views/tools/gen/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/usr/node/app/src/views/tools/gen/index.vue","mtime":1600792748000},{"path":"/usr/node/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/node/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/usr/node/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/node/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/usr/node/app/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _gen = require(\"@/api/tools/gen\");\n\nvar _importTable = _interopRequireDefault(require(\"./importTable\"));\n\nvar _zipdownload = require(\"@/utils/zipdownload\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'Gen',\n  components: {\n    importTable: _importTable.default\n  },\n  data: function data() {\n    return {\n      // 遮罩层\n      loading: true,\n      // 唯一标识符\n      uniqueId: '',\n      // 选中数组\n      ids: [],\n      // 选中表数组\n      tableNames: [],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 总条数\n      total: 0,\n      // 表数据\n      tableList: [],\n      // 日期范围\n      dateRange: '',\n      // 查询参数\n      queryParams: {\n        pageIndex: 1,\n        pageSize: 10,\n        tableName: undefined,\n        tableComment: undefined\n      },\n      // 预览参数\n      preview: {\n        open: false,\n        title: '代码预览',\n        data: {},\n        activeName: 'api.go'\n      }\n    };\n  },\n  created: function created() {\n    this.getList();\n  },\n  activated: function activated() {\n    var time = this.$route.query.t;\n\n    if (time !== null && time !== this.uniqueId) {\n      this.uniqueId = time;\n      this.resetQuery();\n    }\n  },\n  methods: {\n    /** 查询表集合 */\n    getList: function getList() {\n      var _this = this;\n\n      this.loading = true;\n      (0, _gen.listTable)(this.addDateRange(this.queryParams, this.dateRange)).then(function (response) {\n        _this.tableList = response.data.list;\n        _this.total = response.data.count;\n        _this.loading = false;\n      });\n    },\n\n    /** 搜索按钮操作 */\n    handleQuery: function handleQuery() {\n      this.queryParams.pageIndex = 1;\n      this.getList();\n    },\n\n    /** 生成代码操作 */\n    handleGenTable: function handleGenTable(row) {\n      var ids = row.tableId || this.ids;\n\n      if (ids === '') {\n        this.msgError('请选择要生成的数据');\n        return;\n      }\n\n      (0, _zipdownload.downLoadFile)('/api/v1/gen/gencode/' + ids);\n    },\n\n    /** 打开导入表弹窗 */\n    openImportTable: function openImportTable() {\n      this.$refs.import.show();\n    },\n\n    /** 重置按钮操作 */\n    resetQuery: function resetQuery() {\n      this.dateRange = [];\n      this.resetForm('queryForm');\n      this.handleQuery();\n    },\n\n    /** 预览按钮 */\n    handlePreview: function handlePreview(row) {\n      var _this2 = this;\n\n      (0, _gen.previewTable)(row.tableId).then(function (response) {\n        _this2.preview.data = response.data;\n        _this2.preview.open = true;\n      });\n    },\n    handleToProject: function handleToProject(row) {\n      var _this3 = this;\n\n      this.$confirm('正在使用代码生成请确认?', '提示', {\n        confirmButtonText: '生成',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        return (0, _gen.toProjectTableCheckRole)(row.tableId, false);\n      }).then(function (response) {\n        _this3.msgSuccess(response.msg);\n      }).catch(function () {});\n    },\n    handleToProjectCheckRole: function handleToProjectCheckRole(row) {\n      var _this4 = this;\n\n      this.$confirm('正在使用代码生成【带权限】请确认?', '提示', {\n        confirmButtonText: '生成',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        return (0, _gen.toProjectTableCheckRole)(row.tableId, true);\n      }).then(function (response) {\n        _this4.msgSuccess(response.msg);\n      }).catch(function () {});\n    },\n    handleToDB: function handleToDB(row) {\n      var _this5 = this;\n\n      this.$confirm('正在使用【菜单以及API生成到数据库】请确认?', '提示', {\n        confirmButtonText: '写入DB',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        return (0, _gen.toDBTable)(row.tableId);\n      }).then(function (response) {\n        _this5.msgSuccess(response.msg);\n      }).catch(function () {});\n    },\n    // 多选框选中数据\n    handleSelectionChange: function handleSelectionChange(selection) {\n      this.ids = selection.map(function (item) {\n        return item.tableId;\n      });\n      this.tableNames = selection.map(function (item) {\n        return item.tableName;\n      });\n      this.single = selection.length !== 1;\n      this.multiple = !selection.length;\n    },\n\n    /** 修改按钮操作 */\n    handleEditTable: function handleEditTable(row) {\n      var tableId = row.tableId || this.ids[0];\n      this.$router.push({\n        path: '/tools/editTable',\n        query: {\n          tableId: tableId\n        }\n      });\n    },\n\n    /** 删除按钮操作 */\n    handleDelete: function handleDelete(row) {\n      var _this6 = this;\n\n      var tableIds = row.tableId || this.ids;\n      this.$confirm('是否确认删除表编号为\"' + tableIds + '\"的数据项?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        return (0, _gen.delTable)(tableIds);\n      }).then(function () {\n        _this6.getList();\n\n        _this6.msgSuccess('删除成功');\n      }).catch(function () {});\n    }\n  }\n};\nexports.default = _default;",null]}