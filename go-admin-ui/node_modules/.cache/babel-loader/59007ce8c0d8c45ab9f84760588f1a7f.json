{"remainingRequest":"/usr/node/app/node_modules/babel-loader/lib/index.js!/usr/node/app/src/utils/costum.js","dependencies":[{"path":"/usr/node/app/src/utils/costum.js","mtime":1600792748000},{"path":"/usr/node/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/node/app/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/usr/node/app/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseTime = parseTime;\nexports.resetForm = resetForm;\nexports.addDateRange = addDateRange;\nexports.selectDictLabel = selectDictLabel;\nexports.sprintf = sprintf;\nexports.praseStrEmpty = praseStrEmpty;\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.regexp.replace\");\n\nrequire(\"core-js/modules/es6.regexp.to-string\");\n\nvar _typeof2 = _interopRequireDefault(require(\"/usr/node/app/node_modules/@babel/runtime-corejs2/helpers/typeof\"));\n\n// 日期格式化\nfunction parseTime(time, pattern) {\n  if (arguments.length === 0 || !time) {\n    return null;\n  }\n\n  var format = pattern || '{y}-{m}-{d} {h}:{i}:{s}';\n  var date;\n\n  if ((0, _typeof2.default)(time) === 'object') {\n    date = time;\n  } else {\n    if (typeof time === 'string' && /^[0-9]+$/.test(time)) {\n      time = parseInt(time);\n    }\n\n    if (typeof time === 'number' && time.toString().length === 10) {\n      time = time * 1000;\n    }\n\n    date = new Date(time);\n  }\n\n  var formatObj = {\n    y: date.getFullYear(),\n    m: date.getMonth() + 1,\n    d: date.getDate(),\n    h: date.getHours(),\n    i: date.getMinutes(),\n    s: date.getSeconds(),\n    a: date.getDay()\n  };\n  var time_str = format.replace(/{(y|m|d|h|i|s|a)+}/g, function (result, key) {\n    var value = formatObj[key]; // Note: getDay() returns 0 on Sunday\n\n    if (key === 'a') {\n      return ['日', '一', '二', '三', '四', '五', '六'][value];\n    }\n\n    if (result.length > 0 && value < 10) {\n      value = '0' + value;\n    }\n\n    return value || 0;\n  });\n  return time_str;\n} // 表单重置\n\n\nfunction resetForm(refName) {\n  if (this.$refs[refName]) {\n    this.$refs[refName].resetFields();\n  }\n} // 添加日期范围\n\n\nfunction addDateRange(params, dateRange) {\n  var search = params;\n  search.beginTime = '';\n  search.endTime = '';\n\n  if (dateRange != null && dateRange !== '') {\n    search.beginTime = this.dateRange[0];\n    search.endTime = this.dateRange[1];\n  }\n\n  return search;\n} // 回显数据字典\n\n\nfunction selectDictLabel(datas, value) {\n  var actions = [];\n  Object.keys(datas).map(function (key) {\n    if (datas[key].dictValue === '' + value) {\n      actions.push(datas[key].dictLabel);\n      return false;\n    }\n  });\n  return actions.join('');\n} // 字符串格式化(%s )\n\n\nfunction sprintf(str) {\n  var args = arguments;\n  var flag = true;\n  var i = 1;\n  str = str.replace(/%s/g, function () {\n    var arg = args[i++];\n\n    if (typeof arg === 'undefined') {\n      flag = false;\n      return '';\n    }\n\n    return arg;\n  });\n  return flag ? str : '';\n} // 转换字符串，undefined,null等转化为\"\"\n\n\nfunction praseStrEmpty(str) {\n  if (!str || str === 'undefined' || str === 'null') {\n    return '';\n  }\n\n  return str;\n}",null]}