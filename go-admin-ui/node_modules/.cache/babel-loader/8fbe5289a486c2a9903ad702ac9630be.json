{"remainingRequest":"/usr/node/app/node_modules/babel-loader/lib/index.js!/usr/node/app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/usr/node/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/node/app/src/views/scbteachers/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/usr/node/app/src/views/scbteachers/index.vue","mtime":1602875952000},{"path":"/usr/node/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/node/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/usr/node/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/node/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/usr/node/app/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _scbteachers = require(\"@/api/scbteachers\");\n\nvar _scbdept = require(\"@/api/scbdept\");\n\nvar _scbpost = require(\"@/api/scbpost\");\n\nvar _vueTreeselect = _interopRequireDefault(require(\"@riophae/vue-treeselect\"));\n\nrequire(\"@riophae/vue-treeselect/dist/vue-treeselect.css\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'Scbteachers',\n  components: {\n    Treeselect: _vueTreeselect.default\n  },\n  data: function data() {\n    return {\n      deptOptions: [],\n      // 遮罩层\n      loading: true,\n      // 选中数组\n      ids: [],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 总条数\n      total: 0,\n      // 弹出层标题\n      title: '',\n      // 是否显示弹出层\n      open: false,\n      isEdit: false,\n      // 类型数据字典\n      typeOptions: [],\n      scbteachersList: [],\n      // 岗位选项\n      postOptions: [],\n      postIds: undefined,\n      // 查询参数\n      queryParams: {\n        pageIndex: 1,\n        pageSize: 10,\n        id: undefined,\n        name: undefined,\n        phone: undefined,\n        classId: undefined,\n        postId: undefined,\n        isDeleted: undefined\n      },\n      // 表单参数\n      form: {},\n      // 表单校验\n      rules: {\n        id: [{\n          required: true,\n          message: '不能为空',\n          trigger: 'blur'\n        }],\n        name: [{\n          required: true,\n          message: '名称不能为空',\n          trigger: 'blur'\n        }],\n        phone: [{\n          required: true,\n          message: '手机号不能为空',\n          trigger: 'blur'\n        }],\n        classId: [{\n          required: true,\n          message: '班级id不能为空',\n          trigger: 'blur'\n        }],\n        postId: [{\n          required: true,\n          message: '岗位id不能为空',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created: function created() {\n    this.getList();\n  },\n  methods: {\n    /** 转换班级数据结构 */\n    normalizer: function normalizer(node) {\n      if (node.children && !node.children.length) {\n        delete node.children;\n      }\n\n      return {\n        id: node.deptId,\n        label: node.deptName,\n        children: node.children\n      };\n    },\n\n    /** 查询班级下拉树结构 */\n    getTreeselect: function getTreeselect(e) {\n      var _this = this;\n\n      (0, _scbdept.getDeptList)().then(function (response) {\n        _this.deptOptions = [];\n        var dept = {\n          deptId: 0,\n          deptName: '请选择',\n          children: []\n        };\n        dept.children = response.data;\n\n        _this.deptOptions.push(dept);\n      });\n    },\n\n    /** 查询参数列表 */\n    getList: function getList() {\n      var _this2 = this;\n\n      this.loading = true;\n      (0, _scbteachers.listScbTeachers)(this.addDateRange(this.queryParams, this.dateRange)).then(function (response) {\n        _this2.scbteachersList = response.data.list;\n        _this2.total = response.data.count;\n        _this2.loading = false;\n      });\n    },\n    // 取消按钮\n    cancel: function cancel() {\n      this.open = false;\n      this.reset();\n    },\n    // 表单重置\n    reset: function reset() {\n      this.form = {\n        id: undefined,\n        name: undefined,\n        phone: undefined,\n        classId: undefined,\n        postId: undefined,\n        remark: undefined,\n        isDeleted: undefined\n      };\n      this.resetForm('form');\n    },\n\n    /** 搜索按钮操作 */\n    handleQuery: function handleQuery() {\n      this.queryParams.pageIndex = 1;\n      this.getList();\n    },\n\n    /** 重置按钮操作 */\n    resetQuery: function resetQuery() {\n      this.dateRange = [];\n      this.resetForm('queryForm');\n      this.handleQuery();\n    },\n\n    /** 新增按钮操作 */\n    handleAdd: function handleAdd() {\n      var _this3 = this;\n\n      this.reset();\n      this.getTreeselect('add');\n      this.open = true;\n      this.title = '添加教职员工表';\n      this.isEdit = false;\n      (0, _scbpost.getScbpostAll)().then(function (response) {\n        _this3.postOptions = response.data;\n      });\n    },\n    // 多选框选中数据\n    handleSelectionChange: function handleSelectionChange(selection) {\n      this.ids = selection.map(function (item) {\n        return item.id;\n      });\n      this.single = selection.length !== 1;\n      this.multiple = !selection.length;\n    },\n\n    /** 修改按钮操作 */\n    handleUpdate: function handleUpdate(row) {\n      var _this4 = this;\n\n      this.reset();\n      this.getTreeselect('update');\n      var id = row.id || this.ids;\n      (0, _scbteachers.getScbTeachers)(id).then(function (response) {\n        _this4.form = response.data;\n        _this4.open = true;\n        _this4.title = '修改教职员工表';\n        _this4.isEdit = true;\n        (0, _scbpost.getScbpostAll)().then(function (res) {\n          _this4.postOptions = res.data; // this.postId = response.data.postId\n        });\n      });\n    },\n\n    /** 提交按钮 */\n    submitForm: function submitForm() {\n      var _this5 = this;\n\n      this.$refs['form'].validate(function (valid) {\n        if (valid) {\n          if (_this5.form.id !== undefined) {\n            (0, _scbteachers.updateScbTeachers)(_this5.form).then(function (response) {\n              if (response.code === 200) {\n                _this5.msgSuccess('修改成功');\n\n                _this5.open = false;\n\n                _this5.getList();\n              } else {\n                _this5.msgError(response.msg);\n              }\n            });\n          } else {\n            (0, _scbteachers.addScbTeachers)(_this5.form).then(function (response) {\n              if (response.code === 200) {\n                _this5.msgSuccess('新增成功');\n\n                _this5.open = false;\n\n                _this5.getList();\n              } else {\n                _this5.msgError(response.msg);\n              }\n            });\n          }\n        }\n      });\n    },\n\n    /** 删除按钮操作 */\n    handleDelete: function handleDelete(row) {\n      var _this6 = this;\n\n      var Ids = row.id || this.ids;\n      this.$confirm('是否确认删除编号为\"' + Ids + '\"的数据项?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        return (0, _scbteachers.delScbTeachers)(Ids);\n      }).then(function () {\n        _this6.getList();\n\n        _this6.msgSuccess('删除成功');\n      }).catch(function () {});\n    }\n  }\n};\nexports.default = _default;",null]}