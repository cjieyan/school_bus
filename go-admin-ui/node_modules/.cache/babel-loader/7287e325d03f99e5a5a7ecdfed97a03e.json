{"remainingRequest":"/usr/node/app/node_modules/babel-loader/lib/index.js!/usr/node/app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/usr/node/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/node/app/src/views/scbcars/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/usr/node/app/src/views/scbcars/index.vue","mtime":1602871969000},{"path":"/usr/node/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/node/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/usr/node/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/node/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nrequire(\"core-js/modules/es6.function.name\");\n\nvar _scbcars = require(\"@/api/scbcars\");\n\nvar _scbteachers = require(\"@/api/scbteachers\");\n\nrequire(\"@riophae/vue-treeselect/dist/vue-treeselect.css\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'Scbcars',\n  data: function data() {\n    return {\n      attendantsOptions: [],\n      // 遮罩层\n      loading: true,\n      // 选中数组\n      ids: [],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 总条数\n      total: 0,\n      // 弹出层标题\n      title: '',\n      // 是否显示弹出层\n      open: false,\n      isEdit: false,\n      // 类型数据字典\n      typeOptions: [],\n      scbcarsList: [],\n      // 查询参数\n      queryParams: {\n        pageIndex: 1,\n        pageSize: 10,\n        carNumber: undefined,\n        carNo: undefined,\n        driver: undefined,\n        phone: undefined\n      },\n      // 表单参数\n      form: {\n        deptId: undefined,\n        deptName: undefined\n      },\n      // 表单校验\n      rules: {\n        carNumber: [{\n          required: true,\n          message: '车牌编号不能为空',\n          trigger: 'blur'\n        }],\n        carNo: [{\n          required: true,\n          message: '车牌号不能为空',\n          trigger: 'blur'\n        }],\n        driver: [{\n          required: true,\n          message: '司机不能为空',\n          trigger: 'blur'\n        }],\n        phone: [{\n          required: true,\n          message: '手机号不能为空',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created: function created() {\n    this.getList();\n  },\n  methods: {\n    normalizer: function normalizer(node) {\n      if (node.children && !node.children.length) {\n        delete node.children;\n      }\n\n      return {\n        id: node.id,\n        label: node.name,\n        children: node.children\n      };\n    },\n\n    /** 查询参数列表 */\n    getList: function getList() {\n      var _this = this;\n\n      this.loading = true;\n      (0, _scbcars.listScbCars)(this.addDateRange(this.queryParams, this.dateRange)).then(function (response) {\n        _this.scbcarsList = response.data.list;\n        _this.total = response.data.count;\n        _this.loading = false;\n      });\n    },\n\n    /** 查询班级下拉树结构 */\n    getTreeselect: function getTreeselect(e) {\n      var _this2 = this;\n\n      (0, _scbteachers.getAttendants)().then(function (response) {\n        _this2.attendantsOptions = [];\n\n        for (var i = 0; i < response.data.length; i++) {\n          var d = response.data[i];\n          var formatData = {\n            'label': d.name,\n            'value': d.id\n          };\n\n          _this2.attendantsOptions.push(formatData);\n        }\n      });\n    },\n    // 取消按钮\n    cancel: function cancel() {\n      this.open = false;\n      this.reset();\n    },\n    // 表单重置\n    reset: function reset() {\n      this.form = {\n        id: undefined,\n        carNumber: undefined,\n        carNo: undefined,\n        seatsNum: undefined,\n        attendantId: undefined,\n        driver: undefined,\n        phone: undefined,\n        dept: undefined,\n        isDelete: undefined,\n        deptId: undefined,\n        deptName: undefined\n      };\n      this.resetForm('form');\n    },\n\n    /** 搜索按钮操作 */\n    handleQuery: function handleQuery() {\n      this.queryParams.pageIndex = 1;\n      this.getList();\n    },\n\n    /** 重置按钮操作 */\n    resetQuery: function resetQuery() {\n      this.dateRange = [];\n      this.resetForm('queryForm');\n      this.handleQuery();\n    },\n\n    /** 新增按钮操作 */\n    handleAdd: function handleAdd() {\n      this.reset();\n      this.open = true;\n      this.title = '添加车辆';\n      this.isEdit = false;\n      this.getTreeselect('add');\n    },\n    // 多选框选中数据\n    handleSelectionChange: function handleSelectionChange(selection) {\n      this.ids = selection.map(function (item) {\n        return item.row;\n      });\n      this.single = selection.length !== 1;\n      this.multiple = !selection.length;\n    },\n\n    /** 修改按钮操作 */\n    handleUpdate: function handleUpdate(row) {\n      var _this3 = this;\n\n      this.reset();\n      var id = row.id;\n      (0, _scbcars.getScbCars)(id).then(function (response) {\n        _this3.form = response.data;\n        _this3.open = true;\n        _this3.title = '修改车辆';\n        _this3.isEdit = true;\n      });\n      this.getTreeselect('update');\n    },\n\n    /** 提交按钮 */\n    submitForm: function submitForm() {\n      var _this4 = this;\n\n      this.$refs['form'].validate(function (valid) {\n        if (valid) {\n          if (_this4.form.id !== undefined) {\n            (0, _scbcars.updateScbCars)(_this4.form).then(function (response) {\n              if (response.code === 200) {\n                _this4.msgSuccess('修改成功');\n\n                _this4.open = false;\n\n                _this4.getList();\n              } else {\n                _this4.msgError(response.msg);\n              }\n            });\n          } else {\n            (0, _scbcars.addScbCars)(_this4.form).then(function (response) {\n              if (response.code === 200) {\n                _this4.msgSuccess('新增成功');\n\n                _this4.open = false;\n\n                _this4.getList();\n              } else {\n                _this4.msgError(response.msg);\n              }\n            });\n          }\n        }\n      });\n    },\n\n    /** 删除按钮操作 */\n    handleDelete: function handleDelete(row) {\n      var _this5 = this;\n\n      var Ids = row.id || this.ids;\n      this.$confirm('是否确认删除编号为\"' + Ids + '\"的数据项?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        return (0, _scbcars.delScbCars)(Ids);\n      }).then(function () {\n        _this5.getList();\n\n        _this5.msgSuccess('删除成功');\n      }).catch(function () {});\n    }\n  }\n};\nexports.default = _default;",null]}