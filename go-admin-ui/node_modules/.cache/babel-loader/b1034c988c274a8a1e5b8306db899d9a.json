{"remainingRequest":"/usr/node/app/node_modules/babel-loader/lib/index.js!/usr/node/app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/usr/node/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/node/app/src/views/scbdept/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/usr/node/app/src/views/scbdept/index.vue","mtime":1600792748000},{"path":"/usr/node/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/node/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/usr/node/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/node/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\"use strict\";\n\nvar _interopRequireDefault = require(\"/usr/node/app/node_modules/@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _scbdept = require(\"@/api/scbdept\");\n\nvar _vueTreeselect = _interopRequireDefault(require(\"@riophae/vue-treeselect\"));\n\nrequire(\"@riophae/vue-treeselect/dist/vue-treeselect.css\");\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nvar _default = {\n  name: 'ScbDept',\n  components: {\n    Treeselect: _vueTreeselect.default\n  },\n  data: function data() {\n    return {\n      // 遮罩层\n      loading: true,\n      // 表格树数据\n      deptList: [],\n      // 部门树选项\n      deptOptions: [],\n      // 弹出层标题\n      title: '',\n      isEdit: false,\n      // 是否显示弹出层\n      open: false,\n      // 状态数据字典\n      statusOptions: [],\n      // 查询参数\n      queryParams: {\n        deptName: undefined,\n        status: undefined\n      },\n      // 表单参数\n      form: {},\n      // 表单校验\n      rules: {\n        parentId: [{\n          required: true,\n          message: '上一级不能为空',\n          trigger: 'blur'\n        }],\n        deptName: [{\n          required: true,\n          message: '名称不能为空',\n          trigger: 'blur'\n        }],\n        sort: [{\n          required: true,\n          message: '菜单顺序不能为空',\n          trigger: 'blur'\n        }],\n        email: [{\n          type: 'email',\n          message: \"'请输入正确的邮箱地址\",\n          trigger: ['blur', 'change']\n        }],\n        phone: [{\n          pattern: /^1[3|4|5|6|7|8|9][0-9]\\d{8}$/,\n          message: '请输入正确的手机号码',\n          trigger: 'blur'\n        }]\n      }\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    this.getList();\n    this.getDicts('sys_normal_disable').then(function (response) {\n      _this.statusOptions = response.data;\n    });\n  },\n  methods: {\n    /** 查询列表 */\n    getList: function getList() {\n      var _this2 = this;\n\n      this.loading = true;\n      (0, _scbdept.getDeptList)(this.queryParams).then(function (response) {\n        _this2.deptList = response.data;\n        _this2.loading = false;\n      });\n    },\n\n    /** 转换班级数据结构 */\n    normalizer: function normalizer(node) {\n      if (node.children && !node.children.length) {\n        delete node.children;\n      }\n\n      return {\n        id: node.deptId,\n        label: node.deptName,\n        children: node.children\n      };\n    },\n\n    /** 查询部门下拉树结构 */\n    getTreeselect: function getTreeselect(e) {\n      var _this3 = this;\n\n      (0, _scbdept.getDeptList)().then(function (response) {\n        _this3.deptOptions = [];\n\n        if (e === 'update') {\n          var dept = {\n            deptId: 0,\n            deptName: '请选择',\n            children: []\n          };\n          dept.children = response.data;\n\n          _this3.deptOptions.push(dept);\n        } else {\n          var _dept = {\n            deptId: 0,\n            deptName: '请选择',\n            children: []\n          };\n          _dept.children = response.data;\n\n          _this3.deptOptions.push(_dept);\n        }\n      });\n    },\n    // 字典状态字典翻译\n    statusFormat: function statusFormat(row) {\n      return this.selectDictLabel(this.statusOptions, row.status);\n    },\n    // 取消按钮\n    cancel: function cancel() {\n      this.open = false;\n      this.reset();\n    },\n    // 表单重置\n    reset: function reset() {\n      this.form = {\n        deptId: undefined,\n        parentId: undefined,\n        deptName: undefined,\n        sorc: undefined,\n        leader: undefined,\n        phone: undefined,\n        email: undefined,\n        status: '0'\n      };\n    },\n\n    /** 搜索按钮操作 */\n    handleQuery: function handleQuery() {\n      this.getList();\n    },\n\n    /** 新增按钮操作 */\n    handleAdd: function handleAdd(row) {\n      this.reset();\n      this.getTreeselect('add');\n\n      if (row !== undefined) {\n        this.form.parentId = row.deptId;\n      }\n\n      this.open = true;\n      this.title = '添加';\n      this.isEdit = false;\n    },\n\n    /** 修改按钮操作 */\n    handleUpdate: function handleUpdate(row) {\n      var _this4 = this;\n\n      this.reset();\n      this.getTreeselect('update');\n      (0, _scbdept.getScbDept)(row.deptId).then(function (response) {\n        _this4.form = response.data;\n        _this4.open = true;\n        _this4.title = '修改';\n        _this4.isEdit = true;\n      });\n    },\n\n    /** 提交按钮 */\n    submitForm: function submitForm() {\n      var _this5 = this;\n\n      this.$refs['form'].validate(function (valid) {\n        if (valid) {\n          if (_this5.form.deptId !== undefined) {\n            (0, _scbdept.updateScbDept)(_this5.form).then(function (response) {\n              if (response.code === 200) {\n                _this5.msgSuccess('修改成功');\n\n                _this5.open = false;\n\n                _this5.getList();\n              } else {\n                _this5.msgError(response.msg);\n              }\n            });\n          } else {\n            (0, _scbdept.addScbDept)(_this5.form).then(function (response) {\n              if (response.code === 200) {\n                _this5.msgSuccess('新增成功');\n\n                _this5.open = false;\n\n                _this5.getList();\n              } else {\n                _this5.msgError(response.msg);\n              }\n            });\n          }\n        }\n      });\n    },\n\n    /** 删除按钮操作 */\n    handleDelete: function handleDelete(row) {\n      var _this6 = this;\n\n      this.$confirm('是否确认删除名称为\"' + row.deptName + '\"的数据项?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function () {\n        return (0, _scbdept.delScbDept)(row.deptId);\n      }).then(function () {\n        _this6.getList();\n\n        _this6.msgSuccess('删除成功');\n      }).catch(function () {});\n    }\n  }\n};\nexports.default = _default;",null]}