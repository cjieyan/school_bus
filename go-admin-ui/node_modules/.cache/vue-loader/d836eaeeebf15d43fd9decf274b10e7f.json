{"remainingRequest":"/usr/node/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/node/app/src/views/menu/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/usr/node/app/src/views/menu/index.vue","mtime":1600792748000},{"path":"/usr/node/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/node/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/usr/node/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/node/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { listMenu, getMenu, delMenu, addMenu, updateMenu } from '@/api/system/menu'\nimport Treeselect from '@riophae/vue-treeselect'\nimport '@riophae/vue-treeselect/dist/vue-treeselect.css'\nimport IconSelect from '@/components/IconSelect'\n\nexport default {\n  name: 'Menu',\n  components: { Treeselect, IconSelect },\n  data() {\n    return {\n      // 遮罩层\n      loading: true,\n      // 菜单表格树数据\n      menuList: [],\n      // 菜单树选项\n      menuOptions: [],\n      // 弹出层标题\n      title: '',\n      // 是否显示弹出层\n      open: false,\n      // 菜单状态数据字典\n      visibleOptions: [],\n      // 查询参数\n      queryParams: {\n        title: undefined,\n        visible: undefined\n      },\n      // 表单参数\n      form: {},\n      // 表单校验\n      rules: {\n        title: [\n          { required: true, message: '菜单标题不能为空', trigger: 'blur' }\n        ],\n        sort: [\n          { required: true, message: '菜单顺序不能为空', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  created() {\n    this.getList()\n    this.getDicts('sys_show_hide').then(response => {\n      this.visibleOptions = response.data\n    })\n  },\n  methods: {\n    // 选择图标\n    selected(name) {\n      this.form.icon = name\n    },\n    /** 查询菜单列表 */\n    getList() {\n      this.loading = true\n      listMenu(this.queryParams).then(response => {\n        this.menuList = response.data\n        this.loading = false\n      })\n    },\n    /** 转换菜单数据结构 */\n    normalizer(node) {\n      if (node.children && !node.children.length) {\n        delete node.children\n      }\n      return {\n        id: node.menuId,\n        label: node.title,\n        children: node.children\n      }\n    },\n    /** 查询菜单下拉树结构 */\n    getTreeselect() {\n      listMenu().then(response => {\n        this.menuOptions = []\n        const menu = { menuId: 0, title: '主类目', children: [] }\n        menu.children = response.data\n        this.menuOptions.push(menu)\n      })\n    },\n    // 菜单显示状态字典翻译\n    visibleFormat(row) {\n      if (row.menuType === 'F') {\n        return '-- --'\n      }\n      return this.selectDictLabel(this.visibleOptions, row.visible)\n    },\n    // 取消按钮\n    cancel() {\n      this.open = false\n      this.reset()\n    },\n    // 表单重置\n    reset() {\n      this.form = {\n        menuId: undefined,\n        parentId: 0,\n        menuName: undefined,\n        icon: undefined,\n        menuType: 'M',\n        sort: 0,\n        action: this.form.menuType === 'A' ? this.form.action : '',\n        isFrame: '1',\n        visible: '0'\n      }\n      this.resetForm('form')\n    },\n    /** 搜索按钮操作 */\n    handleQuery() {\n      this.getList()\n    },\n    /** 新增按钮操作 */\n    handleAdd(row) {\n      this.reset()\n      this.getTreeselect()\n      if (row != null) {\n        this.form.parentId = row.menuId\n      }\n      this.open = true\n      this.title = '添加菜单'\n    },\n    /** 修改按钮操作 */\n    handleUpdate(row) {\n      this.reset()\n      this.getTreeselect()\n      getMenu(row.menuId).then(response => {\n        this.form = response.data\n        this.open = true\n        this.title = '修改菜单'\n      })\n    },\n    /** 提交按钮 */\n    submitForm: function() {\n      this.$refs['form'].validate(valid => {\n        if (valid) {\n          if (this.form.menuId !== undefined) {\n            updateMenu(this.form).then(response => {\n              if (response.code === 200) {\n                this.msgSuccess('修改成功')\n                this.open = false\n                this.getList()\n              } else {\n                this.msgError(response.msg)\n              }\n            })\n          } else {\n            addMenu(this.form).then(response => {\n              if (response.code === 200) {\n                this.msgSuccess('新增成功')\n                this.open = false\n                this.getList()\n              } else {\n                this.msgError(response.msg)\n              }\n            })\n          }\n        }\n      })\n    },\n    /** 删除按钮操作 */\n    handleDelete(row) {\n      this.$confirm('是否确认删除名称为\"' + row.title + '\"的数据项?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function() {\n        return delMenu(row.menuId)\n      }).then(() => {\n        this.getList()\n        this.msgSuccess('删除成功')\n      }).catch(function() {})\n    }\n  }\n}\n",null]}