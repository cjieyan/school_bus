{"remainingRequest":"/usr/node/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/node/app/src/views/role/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/usr/node/app/src/views/role/index.vue","mtime":1600792748000},{"path":"/usr/node/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/node/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/usr/node/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/node/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { listRole, getRole, delRole, addRole, updateRole, dataScope, changeRoleStatus } from '@/api/system/role'\nimport { treeselect as menuTreeselect, roleMenuTreeselect } from '@/api/system/menu'\nimport { treeselect as deptTreeselect, roleDeptTreeselect } from '@/api/system/dept'\nimport { formatJson } from '@/utils'\n\nexport default {\n  name: 'Role',\n  data() {\n    return {\n      // 遮罩层\n      loading: true,\n      // 选中数组\n      ids: [],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 总条数\n      total: 0,\n      // 角色表格数据\n      roleList: [],\n      // 弹出层标题\n      title: '',\n      // 是否显示弹出层\n      open: false,\n      // 是否显示弹出层（数据权限）\n      openDataScope: false,\n      isEdit: false,\n      // 日期范围\n      dateRange: [],\n      // 状态数据字典\n      statusOptions: [],\n      // 数据范围选项\n      dataScopeOptions: [\n        {\n          value: '1',\n          label: '全部数据权限'\n        },\n        {\n          value: '2',\n          label: '自定数据权限'\n        },\n        {\n          value: '3',\n          label: '本部门数据权限'\n        },\n        {\n          value: '4',\n          label: '本部门及以下数据权限'\n        },\n        {\n          value: '5',\n          label: '仅本人数据权限'\n        }\n      ],\n      // 菜单列表\n      menuOptions: [],\n      // 部门列表\n      deptOptions: [],\n      // 查询参数\n      queryParams: {\n        pageIndex: 1,\n        pageSize: 10,\n        roleName: undefined,\n        roleKey: undefined,\n        status: undefined\n      },\n      // 表单参数\n      form: {},\n      defaultProps: {\n        children: 'children',\n        label: 'label'\n      },\n      // 表单校验\n      rules: {\n        roleName: [\n          { required: true, message: '角色名称不能为空', trigger: 'blur' }\n        ],\n        roleKey: [\n          { required: true, message: '权限字符不能为空', trigger: 'blur' }\n        ],\n        roleSort: [\n          { required: true, message: '角色顺序不能为空', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  created() {\n    this.getList()\n    this.getDicts('sys_normal_disable').then(response => {\n      this.statusOptions = response.data\n    })\n  },\n  methods: {\n    /** 查询角色列表 */\n    getList() {\n      this.loading = true\n      listRole(this.addDateRange(this.queryParams, this.dateRange)).then(\n        response => {\n          this.roleList = response.data.list\n          this.total = response.data.count\n          this.loading = false\n        }\n      )\n    },\n    /** 查询菜单树结构 */\n    getMenuTreeselect() {\n      menuTreeselect().then(response => {\n        this.menuOptions = response.data\n      })\n    },\n    /** 查询部门树结构 */\n    getDeptTreeselect() {\n      deptTreeselect().then(response => {\n        this.deptOptions = response.data.list\n      })\n    },\n    // 所有菜单节点数据\n    getMenuAllCheckedKeys() {\n      // 目前被选中的菜单节点\n      const checkedKeys = this.$refs.menu.getHalfCheckedKeys()\n      // 半选中的菜单节点\n      const halfCheckedKeys = this.$refs.menu.getCheckedKeys()\n      checkedKeys.unshift.apply(checkedKeys, halfCheckedKeys)\n      return checkedKeys\n    },\n    // 所有部门节点数据\n    getDeptAllCheckedKeys() {\n      // 目前被选中的部门节点\n      const checkedKeys = this.$refs.dept.getCheckedKeys()\n      // 半选中的部门节点\n      // const halfCheckedKeys = this.$refs.dept.getCheckedKeys()\n      // checkedKeys.unshift.apply(checkedKeys, halfCheckedKeys)\n      return checkedKeys\n    },\n    /** 根据角色ID查询菜单树结构 */\n    getRoleMenuTreeselect(roleId) {\n      roleMenuTreeselect(roleId).then(response => {\n        this.menuOptions = response.menus\n        this.$nextTick(() => {\n          this.$refs.menu.setCheckedKeys(response.checkedKeys)\n        })\n      })\n    },\n    /** 根据角色ID查询部门树结构 */\n    getRoleDeptTreeselect(roleId) {\n      roleDeptTreeselect(roleId).then(response => {\n        this.deptOptions = response.depts\n        this.$nextTick(() => {\n          this.$refs.dept.setCheckedKeys(response.checkedKeys)\n        })\n      })\n    },\n    // 角色状态修改\n    handleStatusChange(row) {\n      const text = row.status === '0' ? '启用' : '停用'\n      this.$confirm('确认要\"' + text + '\"\"' + row.roleName + '\"角色吗?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function() {\n        return changeRoleStatus(row.roleId, row.status)\n      }).then(() => {\n        this.msgSuccess(text + '成功')\n      }).catch(function() {\n        row.status = row.status === '0' ? '1' : '0'\n      })\n    },\n    // 取消按钮\n    cancel() {\n      this.open = false\n      this.reset()\n    },\n    // 取消按钮（数据权限）\n    cancelDataScope() {\n      this.openDataScope = false\n      this.reset()\n    },\n    // 表单重置\n    reset() {\n      if (this.$refs.menu !== undefined) {\n        this.$refs.menu.setCheckedKeys([])\n      }\n      this.form = {\n        roleId: undefined,\n        roleName: undefined,\n        roleKey: undefined,\n        roleSort: 0,\n        status: '0',\n        menuIds: [],\n        deptIds: [],\n        remark: undefined\n      }\n      this.resetForm('form')\n    },\n    /** 搜索按钮操作 */\n    handleQuery() {\n      this.queryParams.pageIndex = 1\n      this.getList()\n    },\n    /** 重置按钮操作 */\n    resetQuery() {\n      this.dateRange = []\n      this.resetForm('queryForm')\n      this.handleQuery()\n    },\n    // 多选框选中数据\n    handleSelectionChange(selection) {\n      this.ids = selection.map(item => item.roleId)\n      this.single = selection.length !== 1\n      this.multiple = !selection.length\n    },\n    /** 新增按钮操作 */\n    handleAdd() {\n      this.reset()\n      this.getMenuTreeselect()\n      this.open = true\n      this.title = '添加角色'\n      this.isEdit = false\n    },\n    /** 修改按钮操作 */\n    handleUpdate(row) {\n      this.reset()\n      const roleId = row.roleId || this.ids\n      getRole(roleId).then(response => {\n        this.form = response.data\n        this.open = true\n        this.title = '修改角色'\n        this.isEdit = true\n        this.getRoleMenuTreeselect(roleId)\n      })\n    },\n    /** 分配数据权限操作 */\n    handleDataScope(row) {\n      this.reset()\n      getRole(row.roleId).then(response => {\n        this.form = response.data\n        this.openDataScope = true\n        this.title = '分配数据权限'\n        this.getRoleDeptTreeselect(row.roleId)\n      })\n    },\n    /** 提交按钮 */\n    submitForm: function() {\n      this.$refs['form'].validate(valid => {\n        if (valid) {\n          if (this.form.roleId !== undefined) {\n            this.form.menuIds = this.getMenuAllCheckedKeys()\n            updateRole(this.form).then(response => {\n              if (response.code === 200) {\n                this.msgSuccess('修改成功')\n                this.open = false\n                this.getList()\n              } else {\n                this.msgError(response.msg)\n              }\n            })\n          } else {\n            this.form.menuIds = this.getMenuAllCheckedKeys()\n            addRole(this.form).then(response => {\n              if (response.code === 200) {\n                this.msgSuccess('新增成功')\n                this.open = false\n                this.getList()\n              } else {\n                this.msgError(response.msg)\n              }\n            })\n          }\n        }\n      })\n    },\n    /** 提交按钮（数据权限） */\n    submitDataScope: function() {\n      if (this.form.roleId !== undefined) {\n        this.form.deptIds = this.getDeptAllCheckedKeys()\n        console.log(this.getDeptAllCheckedKeys())\n        dataScope(this.form).then(response => {\n          if (response.code === 200) {\n            this.msgSuccess('修改成功')\n            this.openDataScope = false\n            this.getList()\n          } else {\n            this.msgError(response.msg)\n          }\n        })\n      }\n    },\n    /** 删除按钮操作 */\n    handleDelete(row) {\n      const roleIds = row.roleId || this.ids\n      this.$confirm('是否确认删除角色编号为\"' + roleIds + '\"的数据项?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function() {\n        return delRole(roleIds)\n      }).then(() => {\n        this.getList()\n        this.msgSuccess('删除成功')\n      }).catch(function() {})\n    },\n    /** 导出按钮操作 */\n    handleExport() {\n      this.$confirm('是否确认导出所有角色数据项?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.downloadLoading = true\n        import('@/vendor/Export2Excel').then(excel => {\n          const tHeader = ['角色编号', '角色名称', '权限字符', '显示顺序', '状态', '创建时间']\n          const filterVal = ['roleId', 'roleName', 'roleKey', 'roleSort', 'status', 'createdAt']\n          const list = this.roleList\n          const data = formatJson(filterVal, list)\n          excel.export_json_to_excel({\n            header: tHeader,\n            data,\n            filename: '角色管理',\n            autoWidth: true, // Optional\n            bookType: 'xlsx' // Optional\n          })\n          this.downloadLoading = false\n        })\n      })\n    }\n  }\n}\n",null]}