{"remainingRequest":"/usr/node/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/node/app/src/views/scblines/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/usr/node/app/src/views/scblines/index.vue","mtime":1602875830000},{"path":"/usr/node/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/node/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/usr/node/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/node/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { addScbLines, delScbLines, getScbLines, listScbLines, updateScbLines, carsTreeselect } from '@/api/scblines'\n\nexport default {\n  name: 'Config',\n  data() {\n    return {\n      // 遮罩层\n      loading: true,\n      // 选中数组\n      ids: [],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 总条数\n      total: 0,\n      // 弹出层标题\n      title: '',\n      // 是否显示弹出层\n      open: false,\n      isEdit: false,\n      // 类型数据字典\n      typeOptions: [],\n      scblinesList: [],\n      // 车辆列表\n      carsOptions: [],\n      carIdsSelected: [],\n      // carIdsSubmit: [],\n\n      // 查询参数\n      queryParams: {\n        pageIndex: 1,\n        pageSize: 10,\n        id:\n            undefined,\n        name:\n            undefined,\n        departed_at:\n            undefined,\n        arrivedAt:\n            undefined,\n        changeExpiredAt:\n            undefined,\n        carIdsSelected:\n            undefined,\n        createdAt:\n            undefined,\n        updatedAt:\n            undefined,\n        isDelete:\n            undefined,\n        deletedAt:\n            undefined\n\n      },\n      // 表单参数\n      form: {\n      },\n      defaultProps: {\n        children: 'children',\n        label: 'label'\n      },\n      // 表单校验\n      rules: { id:\n                [\n                  { required: true, message: '不能为空', trigger: 'blur' }\n                ],\n      name:\n                [\n                  { required: true, message: '线路名称不能为空', trigger: 'blur' }\n                ],\n      departed_at:\n                [\n                  { required: false, message: '出发时间不能为空', trigger: 'change' }\n                ],\n      arrivedAt:\n                [\n                  { required: false, message: '到达时间不能为空', trigger: 'change' }\n                ],\n      changeExpiredAt:\n                [\n                  { required: false, message: '换站截止时间不能为空', trigger: 'change' }\n                ],\n      carIdsSelected:\n                [\n                  { required: true, message: '绑定的车辆不能为空', trigger: 'blur' }\n                ],\n      createdAt:\n                [\n                  { required: true, message: '创建时间不能为空', trigger: 'blur' }\n                ],\n      updatedAt:\n                [\n                  { required: true, message: '更新时间不能为空', trigger: 'blur' }\n                ],\n      isDelete:\n                [\n                  { required: true, message: '0正常 1已删除不能为空', trigger: 'blur' }\n                ],\n      deletedAt:\n                [\n                  { required: true, message: '不能为空', trigger: 'blur' }\n                ]\n      }\n    }\n  },\n  created() {\n    this.getList()\n  },\n  methods: {\n\n    // 所有菜单节点数据\n    getCarsAllCheckedKeys() {\n      // 目前被选中的菜单节点\n      const checkedKeys = this.$refs.cars.getHalfCheckedKeys()\n      // 半选中的菜单节点\n      const halfCheckedKeys = this.$refs.cars.getCheckedKeys()\n      checkedKeys.unshift.apply(checkedKeys, halfCheckedKeys)\n      return checkedKeys\n    },\n    /** 查询菜单树结构 */\n    getCarsTreeselect(lineId) {\n      carsTreeselect(lineId).then(response => {\n        this.carsOptions = response.cars\n        this.$nextTick(() => {\n          this.$refs.cars.setCheckedKeys(response.checkedKeys)\n        })\n      })\n    },\n    /** 查询参数列表 */\n    getList() {\n      this.loading = true\n      listScbLines(this.addDateRange(this.queryParams, this.dateRange)).then(response => {\n        this.scblinesList = response.data.list\n        this.total = response.data.count\n        this.loading = false\n      }\n      )\n    },\n    // 取消按钮\n    cancel() {\n      this.open = false\n      this.reset()\n    },\n    // 表单重置\n    reset() {\n      this.form = {\n\n        id: undefined,\n        name: undefined,\n        departed_at: undefined,\n        arrivedAt: undefined,\n        changeExpiredAt: undefined,\n        carIdsSelected: undefined,\n        carIdsSubmit: undefined,\n        isDelete: undefined\n      }\n      this.resetForm('form')\n    },\n\n    /** 搜索按钮操作 */\n    handleQuery() {\n      this.queryParams.pageIndex = 1\n      this.getList()\n    },\n    /** 重置按钮操作 */\n    resetQuery() {\n      this.dateRange = []\n      this.resetForm('queryForm')\n      this.handleQuery()\n    },\n    /** 新增按钮操作 */\n    handleAdd() {\n      this.reset()\n      this.open = true\n      this.title = '添加线路管理'\n      this.isEdit = false\n      this.getCarsTreeselect(0)\n    },\n    // 多选框选中数据\n    handleSelectionChange(selection) {\n      this.ids = selection.map(item => item.id)\n      this.single = selection.length !== 1\n      this.multiple = !selection.length\n    },\n    /** 修改按钮操作 */\n    handleUpdate(row) {\n      this.reset()\n      const id = row.id || this.ids\n      getScbLines(id).then(response => {\n        this.form = response.data\n        this.open = true\n        this.title = '修改线路管理'\n        this.isEdit = true\n      })\n      this.getCarsTreeselect(id)\n    },\n    /** 提交按钮 */\n    submitForm: function() {\n      this.$refs['form'].validate(valid => {\n        if (valid) {\n          this.form.carIdsSubmit = this.getCarsAllCheckedKeys()\n          console.log(this.form.carIdsSubmit)\n          if (this.form.id !== undefined) {\n            updateScbLines(this.form).then(response => {\n              if (response.code === 200) {\n                this.msgSuccess('修改成功')\n                this.open = false\n                this.getList()\n              } else {\n                this.msgError(response.msg)\n              }\n            })\n          } else {\n            addScbLines(this.form).then(response => {\n              if (response.code === 200) {\n                this.msgSuccess('新增成功')\n                this.open = false\n                this.getList()\n              } else {\n                this.msgError(response.msg)\n              }\n            })\n          }\n        }\n      })\n    },\n    /** 删除按钮操作 */\n    handleDelete(row) {\n      const Ids = row.id || this.ids\n      this.$confirm('是否确认删除编号为\"' + Ids + '\"的数据项?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function() {\n        return delScbLines(Ids)\n      }).then(() => {\n        this.getList()\n        this.msgSuccess('删除成功')\n      }).catch(function() {\n      })\n    }\n  }\n}\n",null]}