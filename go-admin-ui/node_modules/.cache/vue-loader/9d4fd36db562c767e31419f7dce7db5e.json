{"remainingRequest":"/usr/node/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/node/app/src/views/config/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/usr/node/app/src/views/config/index.vue","mtime":1600792748000},{"path":"/usr/node/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/node/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/usr/node/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/node/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { listConfig, getConfig, delConfig, addConfig, updateConfig } from '@/api/system/config'\nimport { formatJson } from '@/utils'\n\nexport default {\n  name: 'Config',\n  data() {\n    return {\n      // 遮罩层\n      loading: true,\n      // 选中数组\n      ids: [],\n      // 非单个禁用\n      single: true,\n      // 非多个禁用\n      multiple: true,\n      // 总条数\n      total: 0,\n      // 参数表格数据\n      configList: [],\n      // 弹出层标题\n      title: '',\n      isEdit: false,\n      // 是否显示弹出层\n      open: false,\n      // 类型数据字典\n      typeOptions: [],\n      // 日期范围\n      dateRange: [],\n      // 查询参数\n      queryParams: {\n        pageIndex: 1,\n        pageSize: 10,\n        configName: undefined,\n        configKey: undefined,\n        configType: undefined\n      },\n      // 表单参数\n      form: {},\n      // 表单校验\n      rules: {\n        configName: [\n          { required: true, message: '参数名称不能为空', trigger: 'blur' }\n        ],\n        configKey: [\n          { required: true, message: '参数键名不能为空', trigger: 'blur' }\n        ],\n        configValue: [\n          { required: true, message: '参数键值不能为空', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  created() {\n    this.getList()\n    this.getDicts('sys_yes_no').then(response => {\n      this.typeOptions = response.data\n    })\n  },\n  methods: {\n    /** 查询参数列表 */\n    getList() {\n      this.loading = true\n      listConfig(this.addDateRange(this.queryParams, this.dateRange)).then(response => {\n        this.configList = response.data.list\n        this.total = response.data.count\n        this.loading = false\n      }\n      )\n    },\n    // 参数系统内置字典翻译\n    typeFormat(row, column) {\n      return this.selectDictLabel(this.typeOptions, row.configType)\n    },\n    // 取消按钮\n    cancel() {\n      this.open = false\n      this.reset()\n    },\n    // 表单重置\n    reset() {\n      this.form = {\n        configId: undefined,\n        configName: undefined,\n        configKey: undefined,\n        configValue: undefined,\n        configType: 'Y',\n        remark: undefined\n      }\n      this.resetForm('form')\n    },\n    /** 搜索按钮操作 */\n    handleQuery() {\n      this.queryParams.pageIndex = 1\n      this.getList()\n    },\n    /** 重置按钮操作 */\n    resetQuery() {\n      this.dateRange = []\n      this.resetForm('queryForm')\n      this.handleQuery()\n    },\n    /** 新增按钮操作 */\n    handleAdd() {\n      this.reset()\n      this.open = true\n      this.title = '添加参数'\n      this.isEdit = false\n    },\n    // 多选框选中数据\n    handleSelectionChange(selection) {\n      this.ids = selection.map(item => item.configId)\n      this.single = selection.length !== 1\n      this.multiple = !selection.length\n    },\n    /** 修改按钮操作 */\n    handleUpdate(row) {\n      this.reset()\n      const configId = row.configId || this.ids\n      getConfig(configId).then(response => {\n        this.form = response.data\n        this.open = true\n        this.title = '修改参数'\n        this.isEdit = true\n      })\n    },\n    /** 提交按钮 */\n    submitForm: function() {\n      this.$refs['form'].validate(valid => {\n        if (valid) {\n          if (this.form.configId !== undefined) {\n            updateConfig(this.form).then(response => {\n              if (response.code === 200) {\n                this.msgSuccess('修改成功')\n                this.open = false\n                this.getList()\n              } else {\n                this.msgError(response.msg)\n              }\n            })\n          } else {\n            addConfig(this.form).then(response => {\n              if (response.code === 200) {\n                this.msgSuccess('新增成功')\n                this.open = false\n                this.getList()\n              } else {\n                this.msgError(response.msg)\n              }\n            })\n          }\n        }\n      })\n    },\n    /** 删除按钮操作 */\n    handleDelete(row) {\n      const configIds = row.configId || this.ids\n      this.$confirm('是否确认删除参数编号为\"' + configIds + '\"的数据项?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(function() {\n        return delConfig(configIds)\n      }).then(() => {\n        this.getList()\n        this.msgSuccess('删除成功')\n      }).catch(function() {})\n    },\n    /** 导出按钮操作 */\n    handleExport() {\n      // const queryParams = this.queryParams\n      this.$confirm('是否确认导出所有参数数据项?', '警告', {\n        confirmButtonText: '确定',\n        cancelButtonText: '取消',\n        type: 'warning'\n      }).then(() => {\n        this.downloadLoading = true\n        import('@/vendor/Export2Excel').then(excel => {\n          const tHeader = ['参数主键', '参数名称', '参数键名', '参数键值', '备注', '创建时间']\n          const filterVal = ['configId', 'configName', 'configKey', 'configValue', 'remark', 'createdAt']\n          const list = this.configList\n          const data = formatJson(filterVal, list)\n          excel.export_json_to_excel({\n            header: tHeader,\n            data,\n            filename: '参数设置',\n            autoWidth: true, // Optional\n            bookType: 'xlsx' // Optional\n          })\n          this.downloadLoading = false\n        })\n      })\n    }\n  }\n}\n",null]}