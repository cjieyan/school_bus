{"remainingRequest":"/usr/node/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/node/app/src/views/profile/resetPwd.vue?vue&type=script&lang=js&","dependencies":[{"path":"/usr/node/app/src/views/profile/resetPwd.vue","mtime":1600792748000},{"path":"/usr/node/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/node/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/usr/node/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/node/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { updateUserPwd } from '@/api/system/sysuser'\n\nexport default {\n  data() {\n    const equalToPassword = (rule, value, callback) => {\n      if (this.user.newPassword !== value) {\n        callback(new Error('两次输入的密码不一致'))\n      } else {\n        callback()\n      }\n    }\n    return {\n      test: '1test',\n      user: {\n        oldPassword: undefined,\n        newPassword: undefined,\n        confirmPassword: undefined\n      },\n      // 表单校验\n      rules: {\n        oldPassword: [\n          { required: true, message: '旧密码不能为空', trigger: 'blur' }\n        ],\n        newPassword: [\n          { required: true, message: '新密码不能为空', trigger: 'blur' },\n          { min: 6, max: 20, message: '长度在 6 到 20 个字符', trigger: 'blur' }\n        ],\n        confirmPassword: [\n          { required: true, message: '确认密码不能为空', trigger: 'blur' },\n          { required: true, validator: equalToPassword, trigger: 'blur' }\n        ]\n      }\n    }\n  },\n  methods: {\n    submit() {\n      this.$refs['form'].validate(valid => {\n        if (valid) {\n          updateUserPwd(this.user.oldPassword, this.user.newPassword).then(\n            response => {\n              if (response.code === 200) {\n                this.msgSuccess('修改成功')\n              } else {\n                this.msgError(response.msg)\n              }\n            }\n          )\n        }\n      })\n    },\n    close() {\n      this.$store.dispatch('tagsView/delView', this.$route)\n      this.$router.push({ path: '/index' })\n    }\n  }\n}\n",null]}