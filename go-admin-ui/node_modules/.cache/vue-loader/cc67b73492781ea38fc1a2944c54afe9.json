{"remainingRequest":"/usr/node/app/node_modules/vue-loader/lib/index.js??vue-loader-options!/usr/node/app/src/views/tools/gen/editTable.vue?vue&type=script&lang=js&","dependencies":[{"path":"/usr/node/app/src/views/tools/gen/editTable.vue","mtime":1600792748000},{"path":"/usr/node/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/node/app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/usr/node/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/usr/node/app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport { getGenTable, updateGenTable } from '@/api/tools/gen'\nimport { optionselect as getDictOptionselect } from '@/api/system/dict/type'\nimport basicInfoForm from './basicInfoForm'\nimport genInfoForm from './genInfoForm'\nexport default {\n  name: 'GenEdit',\n  components: {\n    basicInfoForm,\n    genInfoForm\n  },\n  data() {\n    return {\n      // 选中选项卡的 name\n      activeName: 'cloum',\n      // 表格的高度\n      tableHeight: document.documentElement.scrollHeight - 245 + 'px',\n      // 表列信息\n      columns: [],\n      // 字典信息\n      dictOptions: [],\n      // 表详细信息\n      info: {}\n    }\n  },\n  beforeCreate() {\n    const { tableId } = this.$route.query\n    if (tableId) {\n      // 获取表详细信息\n      getGenTable(tableId).then(res => {\n        this.columns = res.data.rows\n        this.info = res.data.info\n      })\n      /** 查询字典下拉列表 */\n      getDictOptionselect().then(response => {\n        this.dictOptions = response.data\n      })\n    }\n  },\n  methods: {\n    /** 提交按钮 */\n    submitForm() {\n      const basicForm = this.$refs.basicInfo.$refs.basicInfoForm\n      const genForm = this.$refs.genInfo.$refs.genInfoForm\n      Promise.all([basicForm, genForm].map(this.getFormPromise)).then(res => {\n        const validateResult = res.every(item => !!item)\n        if (validateResult) {\n          const genTable = Object.assign({}, basicForm.model, genForm.model)\n          console.log(this.columns)\n          genTable.columns = this.columns\n          genTable.params = {\n            treeCode: genTable.treeCode,\n            treeName: genTable.treeName,\n            treeParentCode: genTable.treeParentCode\n          }\n          updateGenTable(genTable).then(res => {\n            this.msgSuccess(res.msg)\n            if (res.code === 200) {\n              this.close()\n            }\n          })\n        } else {\n          this.msgError('表单校验未通过，请重新检查提交内容')\n        }\n      })\n    },\n    getFormPromise(form) {\n      return new Promise(resolve => {\n        form.validate(res => {\n          resolve(res)\n        })\n      })\n    },\n    /** 关闭按钮 */\n    close() {\n      this.$store.dispatch('tagsView/delView', this.$route)\n      this.$router.push({ path: '/tools/gen', query: { t: Date.now() }})\n    }\n  }\n}\n",null]}